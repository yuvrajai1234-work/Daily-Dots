ALTER TABLE habits
ADD COLUMN level_1_label TEXT,
ADD COLUMN level_2_label TEXT,
ADD COLUMN level_3_label TEXT,
ADD COLUMN level_4_label TEXT;

CREATE TABLE habit_logs (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    habit_id BIGINT REFERENCES habits(id) ON DELETE CASCADE,
    user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
    date DATE NOT NULL,
    level INTEGER NOT NULL CHECK (level >= 1 AND level <= 4),
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
    UNIQUE (habit_id, date)
);

-- Function to update updated_at timestamp
CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger to update updated_at on habit_logs update
CREATE TRIGGER set_habit_logs_timestamp
BEFORE UPDATE ON habit_logs
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_timestamp();
